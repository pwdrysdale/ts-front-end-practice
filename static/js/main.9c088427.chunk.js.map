{"version":3,"sources":["context/toastReducer.tsx","context/productReducer.tsx","context/appReducer.tsx","context/AppProvider.tsx","components/Toasts.tsx","components/Navbar.tsx","components/BigSplash.tsx","App.tsx","index.tsx"],"names":["ToastTypes","ProductTypes","toastReducer","state","action","type","AddToast","payload","DeleteToast","filter","x","id","productReducer","AddProduct","DeleteProduct","mainReducer","toasts","products","testFunction","secondTestFunction","initialState","text","name","description","image","inStock","console","log","that","AppContext","createContext","dispatch","AppProvider","children","useReducer","Provider","value","Toasts","useContext","className","length","map","ind","linkClasses","Navbar","navItems","to","condition","function","uuid","setTimeout","setToast","onClick","BigSplash","useState","logText","setLogText","onSubmit","e","preventDefault","htmlFor","onChange","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c088427.chunk.js","sourcesContent":["import { ActionMap } from \"./actionMap\";\n\nimport { Toast } from \"../interfaces\";\n\nimport { ProductActions } from \"./productReducer\";\n\nexport enum ToastTypes {\n    AddToast = \"ADD_TOAST\",\n    DeleteToast = \"DELETE_TOAST\",\n}\n\nexport type ToastPayload = {\n    [ToastTypes.AddToast]: {\n        id: String;\n        type: String;\n        text: String;\n    };\n    [ToastTypes.DeleteToast]: {\n        id: String;\n    };\n};\n\nexport type ToastActions =\n    ActionMap<ToastPayload>[keyof ActionMap<ToastPayload>];\n\nexport const toastReducer = (\n    state: Toast[],\n    action: ToastActions | ProductActions\n) => {\n    switch (action.type) {\n        case ToastTypes.AddToast:\n            return [...state, action.payload];\n        case ToastTypes.DeleteToast:\n            return [...state.filter((x) => x.id !== action.payload.id)];\n        default:\n            return state;\n    }\n};\n","import { ActionMap } from \"./actionMap\";\nimport { Product } from \"../interfaces\";\n\nimport { ToastActions } from \"./toastReducer\";\n\nexport enum ProductTypes {\n    AddProduct = \"ADD_PRODUCT\",\n    DeleteProduct = \"DELETE_PRODUCT\",\n}\n\nexport type ProductPayload = {\n    [ProductTypes.AddProduct]: {\n        id: String;\n        name: String;\n        description: String;\n        image: String;\n        inStock: Number;\n    };\n    [ProductTypes.DeleteProduct]: {\n        id: String;\n    };\n};\n\nexport type ProductActions =\n    ActionMap<ProductPayload>[keyof ActionMap<ProductPayload>];\n\nexport const productReducer = (\n    state: Product[],\n    action: ToastActions | ProductActions\n) => {\n    switch (action.type) {\n        case ProductTypes.AddProduct:\n            return [...state, action.payload];\n        case ProductTypes.DeleteProduct:\n            return [...state.filter((x) => x.id !== action.payload.id)];\n        default:\n            return state;\n    }\n};\n","import { AppContext } from \"../interfaces\";\n\nimport { ToastActions, toastReducer } from \"./toastReducer\";\nimport { ProductActions, productReducer } from \"./productReducer\";\n\nconst mainReducer = (\n    { toasts, products, testFunction, secondTestFunction }: AppContext,\n    action: ToastActions | ProductActions\n) => ({\n    toasts: toastReducer(toasts, action),\n    products: productReducer(products, action),\n    testFunction,\n    secondTestFunction,\n});\n\nexport default mainReducer;\n","import { createContext, useReducer, Dispatch } from \"react\";\n\nimport mainReducer from \"./appReducer\";\nimport { ToastActions } from \"./toastReducer\";\nimport { ProductActions } from \"./productReducer\";\n\nimport { AppContext as AppContextType } from \"../interfaces\";\n\nconst initialState: AppContextType = {\n    toasts: [\n        {\n            type: \"\",\n            text: \"\",\n            id: \"\",\n        },\n    ],\n    products: [\n        {\n            id: \"asfsdafsdef\",\n            name: \"Test Product 1\",\n            description: \"A product just for testing stuff out\",\n            image: \"/bballnight.jpeg\",\n            inStock: 5,\n        },\n    ],\n    testFunction: () => console.log(\"This is the test function\"),\n    secondTestFunction: (that: String): void => console.log(that),\n};\n\nconst AppContext = createContext<{\n    state: AppContextType;\n    dispatch: Dispatch<ToastActions | ProductActions>;\n}>({ state: initialState, dispatch: () => null });\n\nconst AppProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(mainReducer, initialState);\n\n    return (\n        <AppContext.Provider value={{ state, dispatch }}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n\nexport { AppProvider, AppContext };\n","import { useContext } from \"react\";\n\nimport { AppContext } from \"../context/AppProvider\";\n\nconst Toasts = () => {\n    const { state } = useContext(AppContext);\n\n    return (\n        <div className=\"fixed bottom-4 right-4 flex flex-col items\">\n            {state.toasts\n                .filter((x) => x.text.length > 0)\n                .map((x, ind) => (\n                    <div className=\"bg-yellow-300 m-2 px-4 py-2\" key={ind}>\n                        {x.text}\n                    </div>\n                ))}\n        </div>\n    );\n};\n\nexport default Toasts;\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { AppContext } from \"../context/AppProvider\";\nimport { ToastTypes } from \"../context/toastReducer\";\n\nconst linkClasses =\n    \"px-4 py-2 rounded-sm hover:bg-red-400 hover:text-white cursor-pointer\";\n\nconst Navbar = () => {\n    const { dispatch, state } = useContext(AppContext);\n\n    type IncomingToast = {\n        text: String;\n        type: String;\n    };\n\n    const setToast = ({ text, type }: IncomingToast): void => {\n        const id = uuid();\n        dispatch({\n            type: ToastTypes.AddToast,\n            payload: { text, type, id },\n        });\n\n        setTimeout(() => {\n            dispatch({ type: ToastTypes.DeleteToast, payload: { id } });\n        }, 4000);\n    };\n\n    const welcome = (): void => {\n        setToast({ text: \"Welcome to the site!\", type: \"success\" });\n    };\n\n    const navItems = [\n        { text: \"Login\", to: \"/login\", condition: \"public\" },\n        { text: \"Cart\", to: \"/cart\" },\n        {\n            text: \"Welcome\",\n            function: welcome,\n        },\n        {\n            text: \"Test\",\n            function: state.testFunction,\n        },\n    ];\n\n    return (\n        <nav className=\"fixed w-full top-0 shadow-md  bg-white z-50 text-gray-900\">\n            <div className=\"px-9 py-2 mx-auto grid grid-cols-3 items-center  container\">\n                <div className=\"font-bold uppercase tracking-widest\">\n                    Bball crew\n                </div>\n                <div className=\"mx-auto\">Your boy</div>\n                <div className=\"hidden lg:block ml-auto\">\n                    <ul className=\"flex gap-2\">\n                        {navItems.map((x, ind) =>\n                            x.to ? (\n                                <Link to={x.to} key={ind}>\n                                    <li className={linkClasses}>{x.text}</li>\n                                </Link>\n                            ) : (\n                                <li\n                                    onClick={x.function}\n                                    className={linkClasses}\n                                    key={ind}\n                                >\n                                    {x.text}\n                                </li>\n                            )\n                        )}\n                    </ul>\n                </div>\n                <div className=\"ml-auto lg:hidden\">Nav items small screen</div>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import { useContext, useState } from \"react\";\n\nimport { AppContext } from \"../context/AppProvider\";\n\nconst BigSplash = () => {\n    const [logText, setLogText] = useState(\"\");\n    const { state } = useContext(AppContext);\n\n    const formSumbit = (e: any) => {\n        e.preventDefault();\n        state.secondTestFunction(logText);\n    };\n\n    return (\n        <div className=\" bg-local w-full h-screen boys\">\n            <div className=\"grid grid-cols-3 grid-rows-3 container mx-auto h-full \">\n                <h1 className=\"uppercase text-white  row-start-2 self-center justify-end text-right text-9xl text-shadow font-black\">\n                    We play\n                    <p>\n                        <span className=\"italic\">ball</span>\n                    </p>\n                </h1>\n                <div className=\" mt-16 row-start-3 col-start-3\">\n                    <form onSubmit={formSumbit} className=\"flex flex-col gap-4\">\n                        <label htmlFor=\"logger\" className=\"text-white\">\n                            Log it to the console\n                        </label>\n                        <input\n                            type=\"text\"\n                            id=\"logger\"\n                            value={logText}\n                            onChange={(e) => setLogText(e.target.value)}\n                            className=\"p-2\"\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Submit\"\n                            className=\"w-max px-4 py-2 rounded-sm bg-blue-500 text-white hover:bg-blue-700 cursor-pointer\"\n                        />\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BigSplash;\n","import { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { AppProvider } from \"./context/AppProvider\";\n\nimport Toasts from \"./components/Toasts\";\nimport Navbar from \"./components/Navbar\";\nimport BigSplash from \"./components/BigSplash\";\n\nfunction App() {\n    return (\n        <AppProvider>\n            <div className=\"bg-gray-900\">\n                <Router>\n                    <Navbar />\n                    <BigSplash />\n                    <main className=\"container mx-auto\"></main>\n                </Router>\n            </div>\n            <Toasts />\n        </AppProvider>\n    );\n}\n\n<div className=\"px-9 py-3 mx-auto grid grid-cols-3 items-center text-white w-11/12  max-w-7xl\"></div>;\n\nexport default App;\n\n// context setup inspired by\n// https://codesandbox.io/s/context-reducer-ts-9ctis?file=/src/reducers.ts\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}